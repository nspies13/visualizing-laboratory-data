[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "dataviz_website",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "geospatial.html",
    "href": "geospatial.html",
    "title": "Analyzing Geospatial Data",
    "section": "",
    "text": "Geospatial data is… ## TODO"
  },
  {
    "objectID": "geospatial.html#todo",
    "href": "geospatial.html#todo",
    "title": "Analyzing Geospatial Data",
    "section": "TODO",
    "text": "TODO\n\nBasicGoodBetterBest"
  },
  {
    "objectID": "geospatial.html#scenario-1",
    "href": "geospatial.html#scenario-1",
    "title": "Analyzing Geospatial Data",
    "section": "Scenario 1",
    "text": "Scenario 1\n\n1) Rates-based data:\n\nGive options for three map types, make them pick.\nGive options for scales: State-\nGive options for colors and legends, make them pick."
  },
  {
    "objectID": "best_practices.html",
    "href": "best_practices.html",
    "title": "Best Practices in Data Visualization",
    "section": "",
    "text": "Introduction\nGeospatial data is… ## TODO\n\n\nGetting Started\n\nDownload the Data\n\n# Install required packages if not already installed\nif (!requireNamespace(\"arrow\", quietly = TRUE)) {\n  install.packages(\"arrow\")\n}\nif (!requireNamespace(\"tidyverse\", quietly = TRUE)) {\n  install.packages(\"tidyverse\")\n}\nif (!requireNamespace(\"ggdist\", quietly = TRUE)) {\n  install.packages(\"ggdist\")\n}\nif (!requireNamespace(\"ggpmisc\", quietly = TRUE)) {\n  install.packages(\"ggpmisc\")\n}\n\nRegistered S3 methods overwritten by 'ggpp':\n  method                  from   \n  heightDetails.titleGrob ggplot2\n  widthDetails.titleGrob  ggplot2\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Set ggplot theme\ntheme_ns &lt;- theme(text = element_text(family = \"Helvetica\"),\n                  title = element_text(size = 14, margin = margin(0, 0, 8, 0)),\n                  plot.subtitle = element_text(size = 12, face = \"plain\", hjust = 0),\n                  plot.title = element_text(hjust = 0),\n                  axis.title = element_text(size = 12, face = \"bold\", margin = margin(4,4,4,4)),\n                  axis.title.x.bottom = element_text(face = \"bold\", margin = margin(4,0,0,0)),\n                  axis.title.y.left = element_text(face = \"bold\", margin = margin(0,4,0,0)),\n                  legend.title = element_text(face = \"bold.italic\", size = 12),\n                  axis.line = element_line(),\n                  axis.ticks = element_blank(),\n                  panel.grid = element_blank(), \n                  panel.background = element_blank(),\n                  strip.text = element_text(size = 10, face = \"bold.italic\"),\n                  strip.background = element_blank())\ntheme_set(theme_ns)\n\n# Download BMP data for analysis\nbmp_data &lt;- arrow::read_feather(\"https://figshare.com/ndownloader/files/45407398\")\n\n\n\n\nComparing Distributions\nLet’s start by comparing the distributions of potassium results.\n\nBaseGoodBetterBest\n\n\n\nbmp_data |&gt; \n  slice_head(n = 1000) |&gt;\n  ggplot(aes(y = potassium_plas, x = luo_h &gt; 100)) + \n    geom_boxplot() + \n    scale_y_continuous(name = \"Potassium (mmol/L)\", limits = c(2, 8)) + \n    scale_x_discrete(name = \"Hemolysis\", limits = c(F, T), labels = c(\"H-Index &lt; 100\", \"H-Index &gt;= 100\")) +\n    theme(axis.title.x.bottom = element_blank())\n\n\n\n\n\n\n\nbmp_data |&gt; \n  slice_head(n = 1000) |&gt;\n  ggplot(aes(x = potassium_plas, y = luo_h &gt; 100)) + \n    geom_boxplot() +\n    geom_text(data = tibble(x = c(4.1, 4.7), y = c(1.45, 2.45), label = c(\"H-Index &lt; 100\", \"H-Index &gt;= 100\")), aes(x = x, y = y, label = label)) + \n    scale_x_continuous(name = \"Potassium (mmol/L)\", limits = c(2, 8)) + \n    scale_y_discrete(name = \"Hemolysis\", limits = c(F, T), labels = c(\"H-Index &lt; 100\", \"H-Index &gt;= 100\")) +\n    theme(axis.title.x.bottom = element_blank())\n\n\n\n\n\n\n\nbmp_data |&gt; \n  slice_head(n = 1000) |&gt;\n  ggplot(aes(x = potassium_plas, y = luo_h &gt; 100)) + \n    ggdist::stat_halfeye(trim = F) + \n    geom_text(data = tibble(x = c(4.1, 4.7), y = c(1.15, 2.15), label = c(\"H-Index &lt; 100\", \"H-Index &gt;= 100\")), aes(x = x, y = y, label = label)) + \n    scico::scale_fill_scico_d() + \n    scale_x_continuous(name = \"Potassium (mmol/L)\", limits = c(2, 8)) + \n    scale_y_discrete(name = \"Hemolysis\", limits = c(F, T), labels = c(\"H-Index &lt; 100\", \"H-Index &gt;= 100\")) +\n    theme(axis.title.x.bottom = element_blank())\n\n\n\n\n\n\n\nbmp_data |&gt; \n  slice_head(n = 1000) |&gt;\n  ggplot(aes(y = potassium_plas, x = luo_h)) + \n    geom_point(alpha = 0.5, size = 2, stroke = 0.1) + \n    ggpmisc::stat_poly_eq() + \n    scale_y_continuous(name = \"Potassium (mmol/L)\", limits = c(2, 8)) + \n    scale_x_continuous(name = \"Hemolysis Index\") +\n    coord_cartesian(xlim = c(0, 100)) +\n    theme()"
  }
]